#!/bin/bash

set -euo pipefail
shopt -s inherit_errexit 2>/dev/null || true
IFS=$'\n\t'

GREEN='\033[92m'
YELLOW='\033[93m'
RED='\033[91m'
CYAN='\033[96m'
NC='\033[0m'

log_info()    { echo -e "${CYAN}(i) ${NC} $*" >&2; }
log_success() { echo -e "${GREEN}‚úî ${NC} $*" >&2; }
log_warn() 	  { echo -e "${YELLOW}‚ö†Ô∏è ${NC} $*" >&2; }
log_error()   { echo -e "${RED}‚úñ ${NC} $*" >&2; }

# üõë Root –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞
if [[ "$EUID" -ne 0 ]]; then
  log_error "–î–ª—è —Ä–æ–±–æ—Ç–∏ —Å–∫—Ä–∏–ø—Ç–∞ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ root"
  exit 1
fi

user="${1:-}"
newshell="${2:-}"
backup_dir="/var/lib/user-locked-shells"
backup_file="$backup_dir/$user.shell"

if [[ -z "${user:-}" ]]; then
    log_error "–ù–µ –≤–∫–∞–∑–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"
    exit 1
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
function user_isset() {
    id "$1" &>/dev/null
}

# üõ° –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
function is_required_user() {
    [[ "$1" =~ ^(root|nobody|daemon|bin|www-data|vmail|systemd-.*)$ ]]
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
function user_shell_locked(){
    local user="$1"
	local shell
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ shell
    shell=$(getent passwd "$user" | cut -d: -f7)
	
    if user_shell_disabled "$user" && [[ -s "$backup_file" ]]; then
		return 0
    fi
	
	return 1
}

function user_shell_disabled(){
    local user="$1"
	local shell
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ shell
    shell=$(getent passwd "$user" | cut -d: -f7)

    if [[ "$shell" =~ ^(/usr/sbin/nologin|/bin/false)$ ]]; then
        return 0
    else
        return 1
    fi
}

function in_array() {
    local value="$1"
    local -n arr="$2"
    local element
    for element in "${arr[@]}"; do
        [[ "$element" == "$value" ]] && return 0
    done
    return 1
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∑–∞–≥—É–ª—à–µ–Ω–∏–π –≤–∏–≤—ñ–¥ stdout
function stdout_disabled() {

    local target
    target=$(readlink /proc/$$/fd/1 2>/dev/null)

    if [[ "$target" == "/dev/null" ]]; then
        return 0
    else
        return 1
    fi
}

if ! user_isset "$user"; then
    log_error "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $user –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    exit 1
fi

if is_required_user "$user"; then
    log_error "–ù–µ –º–æ–∂–ª–∏–≤–æ –∑–º—ñ–Ω–∏—Ç–∏ Shell-–¥–æ—Å—Ç—É–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $user, –±–æ –≤—ñ–Ω —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º"
    exit 2
fi

if user_shell_locked "$user"; then
    log_error "Shell-–¥–æ—Å—Ç—É–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $user –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π"
    exit 3
fi

# –ü–æ—Ç–æ—á–Ω–∏–π shell
current_shell=$(getent passwd "$user" | cut -d: -f7)
log_info "–ü–æ—Ç–æ—á–Ω–∏–π Shell –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $user: $current_shell"

# –î–æ—Å—Ç—É–ø–Ω—ñ shells –∑ –Ω—É–º–µ—Ä–∞—Ü—ñ—î—é
mapfile -t shells < <(grep -vE '^\s*#' /etc/shells)

if (( ${#shells[@]} == 0 )); then
    log_error "–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö Shells"
    exit 4
fi

if [[ -n "$newshell" ]]; then
	if ! in_array "$newshell" shells; then
		newshell=""
		if stdout_disabled; then
			exit 6
		else
			log_warn "–ù–µ–≤—ñ—Ä–Ω–∏–π Shell"
		fi
	fi
fi

if [[ -z "$newshell" ]]; then

	if stdout_disabled; then
		exit 5
	fi
	
	echo "–î–æ—Å—Ç—É–ø–Ω—ñ Shells:"
	
	for i in "${!shells[@]}"; do
		printf "  %d) %s\n" "$((i+1))" "${shells[i]}"
	done
	
	# –í–∏–±—ñ—Ä –Ω–æ–≤–æ–≥–æ shell
	read -p "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –Ω–æ–≤–æ–≥–æ Shell –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $user: " choice
	if ! [[ "$choice" =~ ^[0-9]+$ ]] || (( choice < 1 || choice > ${#shells[@]} )); then
		log_error "–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä"
		exit 6
	fi
	
	newshell="${shells[$((choice-1))]}"
fi

if [[ -z "$newshell" ]]; then
	log_error "–ü–æ—Ä–æ–∂–Ω—ñ–π Shell"
	exit 5
elif ! in_array "$newshell" shells; then
	log_error "–ù–µ–≤—ñ—Ä–Ω–∏–π Shell"
	exit 6
fi

# –ó–º—ñ–Ω–∞ shell
usermod -s "$newshell" "$user" && log_success "Shell-–¥–æ—Å—Ç—É–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $user –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ $newshell" || {
    log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–º—ñ–Ω–∏—Ç–∏ Shell-–¥–æ—Å—Ç—É–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $user"
    exit 7
}