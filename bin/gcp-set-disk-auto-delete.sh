#!/bin/bash
# gcp-set-disk-auto-delete.sh
# –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è auto-delete –¥–∏—Å–∫—ñ–≤ —É VM

set -euo pipefail
IFS=$'\n\t'

# ===== –ö–æ–ª—å–æ—Ä–∏ =====
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
RED='\033[1;31m'
NC='\033[0m'

log()   { echo -e "${GREEN}[‚úî]${NC} $*"; }
warn()  { echo -e "${YELLOW}[‚ö†Ô∏è]${NC} $*"; }
error() { echo -e "${RED}[‚úñ]${NC} $*" >&2; exit 1; }

# ===== –§—É–Ω–∫—Ü—ñ—è usage =====
usage() {
  cat <<EOF
–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
  $0 --instance=VM_NAME [--project=PROJECT] [--zone=ZONE]
     [--enable | --disable]
     [--all | --boot | --data | --disk=DISK_NAME]

–ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
  --instance=VM_NAME        –Ü–º'—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ—ó –º–∞—à–∏–Ω–∏ (–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)
  --project=PROJECT         –ü—Ä–æ–µ–∫—Ç GCP (–æ–ø—Ü—ñ–π–Ω–æ)
  --zone=ZONE               –ó–æ–Ω–∞ GCP (–æ–ø—Ü—ñ–π–Ω–æ)
  --enable                  –£–≤—ñ–º–∫–Ω—É—Ç–∏ auto-delete
  --disable                 –í–∏–º–∫–Ω—É—Ç–∏ auto-delete
  --all                     –ó–º—ñ–Ω–∏—Ç–∏ –¥–ª—è –≤—Å—ñ—Ö –¥–∏—Å–∫—ñ–≤ (boot + data)
  --boot                    –ó–º—ñ–Ω–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –¥–ª—è boot-–¥–∏—Å–∫–∞
  --data                    –ó–º—ñ–Ω–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –≤—Å—ñ—Ö data-–¥–∏—Å–∫—ñ–≤
  --disk=DISK_NAME          –ó–º—ñ–Ω–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–∏—Å–∫–∞

–Ø–∫—â–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ --enable/--disable ‚Äî –ø–æ–∫–∞–∑—É—î –≤—Å—ñ –¥–∏—Å–∫–∏ –∑ auto-delete
EOF
  exit 1
}

# ===== –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ =====
INSTANCE=""
PROJECT=""
ZONE=""
ACTION="show"
SCOPE=""
DISK_NAME=""

for arg in "$@"; do
  case $arg in
    --instance=*) INSTANCE="${arg#*=}" ;;
    --zone=*) ZONE="${arg#*=}" ;;
    --project=*) PROJECT="${arg#*=}" ;;
    --enable) ACTION="enable" ;;
    --disable) ACTION="disable" ;;
    --all) SCOPE="all" ;;
    --boot) SCOPE="boot" ;;
    --data) SCOPE="data" ;;
    --disk=*) SCOPE="disk"; DISK_NAME="${arg#*=}" ;;
    *) usage ;;
  esac
done

# ===== –û—Ç—Ä–∏–º–∞—Ç–∏ project —ñ zone —è–∫—â–æ –Ω–µ –∑–∞–¥–∞–Ω–æ =====
PROJECT="${PROJECT:-$(gcloud config get-value project 2>/dev/null || echo "")}"
[[ -z "$PROJECT" ]] && error "‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ --project —ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –ø–æ—Ç–æ—á–Ω–∏–π —É gcloud config"

ZONE="${ZONE:-$(gcloud config get-value compute/zone 2>/dev/null || echo "")}"
[[ -z "$ZONE" ]] && error "‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ --zone —ñ –≤—ñ–¥—Å—É—Ç–Ω—è –ø–æ—Ç–æ—á–Ω–∞ –∑–æ–Ω–∞ —É gcloud config"

# ===== –Ø–∫—â–æ instance –Ω–µ –≤–∫–∞–∑–∞–Ω–æ - –ø–æ–ø—Ä–æ—Å–∏—Ç–∏ –≤–∏–±—ñ—Ä =====
if [[ -z "$INSTANCE" ]]; then
  log "üì¶ –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ VM —É –ø—Ä–æ—î–∫—Ç—ñ '$PROJECT', –∑–æ–Ω—ñ '$ZONE'..."
  VM_LIST=$(gcloud compute instances list --project="$PROJECT" --zones="$ZONE" --format="value(name)")
  if [[ -z "$VM_LIST" ]]; then
    error "‚ùå –£ –∑–æ–Ω—ñ '$ZONE' –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö VM"
  fi

  echo -e "\n–î–æ—Å—Ç—É–ø–Ω—ñ VM:"
  select vm in $VM_LIST; do
    if [[ -n "$vm" ]]; then
      INSTANCE="$vm"
      break
    else
      echo "‚õî –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."
    fi
  done
fi

log "üîó –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ VM: $INSTANCE (–ø—Ä–æ–µ–∫—Ç: $PROJECT, –∑–æ–Ω–∞: $ZONE)"

# ===== –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ scope –¥–ª—è enable/disable =====
if [[ "$ACTION" != "show" && -z "$SCOPE" ]]; then
  error "‚ùå –î–ª—è enable/disable –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ scope: --all, --boot, --data –∞–±–æ --disk=NAME"
fi

# ===== –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ gcloud =====
[[ -x "$(command -v gcloud)" ]] || error "‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ gcloud"

# ===== –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –¥–∏—Å–∫–∏ =====
log "üì¶ –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –¥–∏—Å–∫–∏ VM '$INSTANCE'..."
GCLOUD_CMD=(gcloud compute instances describe "$INSTANCE" --format="json" --project="$PROJECT" --zone="$ZONE")

INSTANCE_JSON=$("${GCLOUD_CMD[@]}") || error "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ VM"

DISKS=$(echo "$INSTANCE_JSON" | jq -r '.disks[] | [.deviceName, .boot, .autoDelete] | @tsv')

# ===== –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –¥–∏—Å–∫–∏ =====
if [[ "$ACTION" == "show" ]]; then
  echo -e "\n–î–∏—Å–∫–∏ VM '$INSTANCE':"
  printf "%-20s %-6s %-12s\n" "DISK NAME" "BOOT" "AUTO_DELETE"
  echo "-------------------------------------------"
  while read -r name boot auto; do
    printf "%-20s %-6s %-12s\n" "$name" "$boot" "$auto"
  done <<< "$DISKS"
  exit 0
fi

# ===== –ó–º—ñ–Ω—é—î–º–æ auto-delete =====
set_auto_delete() {
  local disk=$1
  local state=$2
  log "üîÑ –ó–º—ñ–Ω—é—î–º–æ auto-delete=$state –¥–ª—è –¥–∏—Å–∫–∞ '$disk'..."
  CMD=(gcloud compute instances set-disk-auto-delete "$INSTANCE" --disk="$disk" --"$state" --project="$PROJECT" --zone="$ZONE")
  "${CMD[@]}" || warn "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–º—ñ–Ω–∏—Ç–∏ auto-delete –¥–ª—è –¥–∏—Å–∫–∞ '$disk'"
}

while read -r name boot auto; do
  case "$SCOPE" in
    all)
      set_auto_delete "$name" "$ACTION"
      ;;
    boot)
      [[ "$boot" == "true" ]] && set_auto_delete "$name" "$ACTION"
      ;;
    data)
      [[ "$boot" == "false" ]] && set_auto_delete "$name" "$ACTION"
      ;;
    disk)
      [[ "$name" == "$DISK_NAME" ]] && set_auto_delete "$name" "$ACTION"
      ;;
  esac
done <<< "$DISKS"

log "‚úÖ –ó–º—ñ–Ω–∏ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ."
