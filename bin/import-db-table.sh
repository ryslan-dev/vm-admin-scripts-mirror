#!/bin/bash

# ‚úÖ –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è CSV
DELIMITER=","
ENCLOSED_BY="\""
ESCAPED_BY="\""
LINE_TERMINATED_BY="\n"
COL_NAMES=0
ON_DUPLICATE_KEY=""
LIMIT_ROWS=""
NEW_TABLE_NAME=""
SKIP_ERRORS=false

# ‚úÖ –ü–∞—Ä—Å–∏–º–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ key=value
for ARG in "$@"; do
    case $ARG in
        dbname=*) DB_NAME="${ARG#*=}" ;;
        table=*) TABLE_NAME="${ARG#*=}" ;;
        file=*) DATA_FILE="${ARG#*=}" ;;
        format=*) FORMAT="${ARG#*=}" ;;
        delimiter=*) DELIMITER="${ARG#*=}" ;;
        enclosed=*) ENCLOSED_BY="${ARG#*=}" ;;
        escaped=*) ESCAPED_BY="${ARG#*=}" ;;
        line_terminated=*) LINE_TERMINATED_BY="${ARG#*=}" ;;
        col_names=*) COL_NAMES="${ARG#*=}" ;;
        on_duplicate_key_update=*) ON_DUPLICATE_KEY="ON DUPLICATE KEY UPDATE ${ARG#*=}" ;;
        limit_rows=*) LIMIT_ROWS="${ARG#*=}" ;;
        new_table=*) NEW_TABLE_NAME="${ARG#*=}" ;;
        skip_errors=*) SKIP_ERRORS=true ;;
        *)
            echo "‚ùå –ù–µ–≤—ñ–¥–æ–º–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç: $ARG"
            echo "üìñ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: $0 dbname=DB_NAME table=TABLE_NAME file=DATA_FILE format=FORMAT [—ñ–Ω—à—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏]"
            exit 1
            ;;
    esac
done

# ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
if [ -z "$DB_NAME" ] || [ -z "$TABLE_NAME" ] || [ -z "$DATA_FILE" ] || [ -z "$FORMAT" ]; then
    echo "‚ùå –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ dbname=, table=, file=, format="
    echo "üìñ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: $0 dbname=DB_NAME table=TABLE_NAME file=DATA_FILE format=FORMAT [—ñ–Ω—à—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏]"
    exit 1
fi

# ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—É
if [ ! -f "$DATA_FILE" ]; then
    echo "‚ùå –§–∞–π–ª $DATA_FILE –Ω–µ —ñ—Å–Ω—É—î."
    exit 2
fi

# üßπ cleanup
cleanup() {
    if [ -n "${TMP_FILE:-}" ] && [ -f "${TMP_FILE:-}" ]; then
        rm -f "$TMP_FILE"
        echo "üßπ –¢–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª $TMP_FILE –≤–∏–¥–∞–ª–µ–Ω–æ."
    fi
    if [ -n "${MYSQL_CNF:-}" ] && [ -f "${MYSQL_CNF:-}" ]; then
        rm -f "$MYSQL_CNF"
        echo "üßπ –¢–∏–º—á–∞—Å–æ–≤–∏–π –∫–æ–Ω—Ñ—ñ–≥-—Ñ–∞–π–ª MySQL –≤–∏–¥–∞–ª–µ–Ω–æ."
    fi
}
trap cleanup EXIT


# ‚úÖ –ó–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ë–î —ñ –ø–∞—Ä–æ–ª—å
read -p "üë§ –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ MariaDB/MySQL: " DB_USER
read -s -p "üîë –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $DB_USER: " DB_PASS
echo

# ‚úÖ –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π –∫–æ–Ω—Ñ—ñ–≥ –¥–ª—è mysql (—â–æ–± –ø–∞—Ä–æ–ª—å –Ω–µ –≤–∏–¥–Ω–æ –±—É–ª–æ –≤ –ø—Ä–æ—Ü–µ—Å–∞—Ö)
MYSQL_CNF=$(mktemp)
chmod 600 "$MYSQL_CNF"
cat > "$MYSQL_CNF" <<EOF
[client]
user=$DB_USER
password=$DB_PASS
local-infile=1
EOF

# ‚úÖ –Ø–∫—â–æ –≤–∫–∞–∑–∞–Ω–æ –Ω–æ–≤—É —Ç–∞–±–ª–∏—Ü—é ‚Äî –∑–∞–º—ñ–Ω—é—î–º–æ —ñ–º'—è
if [ -n "$NEW_TABLE_NAME" ]; then
    TABLE_NAME="$NEW_TABLE_NAME"
fi

mysql_cmd() {
    mysql --defaults-extra-file="$MYSQL_CNF" -D "$DB_NAME" -e "$1"
}

# ‚úÖ –î–ª—è —Ñ–æ—Ä–º–∞—Ç—É CSV
if [ "$FORMAT" = "csv" ]; then
    echo "üì• –Ü–º–ø–æ—Ä—Ç CSV —É $DB_NAME.$TABLE_NAME..."

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —ñ—Å–Ω—É—î —Ç–∞–±–ª–∏—Ü—è
    TABLE_EXISTS=$(mysql_cmd "SHOW TABLES LIKE '$TABLE_NAME';" | grep "$TABLE_NAME")

    if [ -z "$TABLE_EXISTS" ]; then
        echo "üì¶ –¢–∞–±–ª–∏—Ü—è $TABLE_NAME –Ω–µ —ñ—Å–Ω—É—î. –°—Ç–≤–æ—Ä—é—î–º–æ..."
    
        # –í–∏—Ç—è–≥–Ω—É—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ CSV –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–ª–æ–Ω–æ–∫
        HEADER=$(head -n 1 "$DATA_FILE")
        IFS="$DELIMITER" read -ra COLUMNS <<< "$HEADER"

        SQL_CREATE="CREATE TABLE \`$TABLE_NAME\` ("
        for COL in "${COLUMNS[@]}"; do
            COL_CLEAN=$(echo "$COL" | tr -d '"' | tr -d "'" | xargs)
            SQL_CREATE+="\`$COL_CLEAN\` TEXT,"
        done
        SQL_CREATE=${SQL_CREATE%,}
        SQL_CREATE+=");"

        mysql_cmd "$SQL_CREATE"
        if [ $? -eq 0 ]; then
            echo "‚úÖ –¢–∞–±–ª–∏—Ü—è $TABLE_NAME —Å—Ç–≤–æ—Ä–µ–Ω–∞."
        else
            echo "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é."
            exit 3
        fi
    else
        echo "‚úÖ –¢–∞–±–ª–∏—Ü—è $TABLE_NAME –≤–∂–µ —ñ—Å–Ω—É—î."
    fi
	
    # –Ø–∫—â–æ —î –ª—ñ–º—ñ—Ç —Ä—è–¥–∫—ñ–≤ ‚Äî —Å—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª –∑ —á–∞—Å—Ç–∏–Ω–æ—é –¥–∞–Ω–∏—Ö
    if [[ -n "$LIMIT_ROWS" && "$LIMIT_ROWS" =~ ^[0-9]+$ && "$LIMIT_ROWS" -gt 0 ]]; then
        TMP_FILE="/tmp/$(basename "$DATA_FILE").tmp"
        echo "üì¶ –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª –∑ $LIMIT_ROWS —Ä—è–¥–∫–∞–º–∏: $TMP_FILE"
        head -n $((LIMIT_ROWS + COL_NAMES)) "$DATA_FILE" > "$TMP_FILE"
        DATA_FILE="$TMP_FILE"
    fi

    # ‚úÖ –§–æ—Ä–º—É—î–º–æ SQL
    SQL="
    LOAD DATA LOCAL INFILE '$(realpath "$DATA_FILE")'
    INTO TABLE \`$TABLE_NAME\`
    FIELDS TERMINATED BY '$DELIMITER'
    ENCLOSED BY '$ENCLOSED_BY'
    ESCAPED BY '$ESCAPED_BY'
    LINES TERMINATED BY '$LINE_TERMINATED_BY'
    "

    if [ "${COL_NAMES:-1}" -eq 1 ]; then
        SQL+="IGNORE 1 LINES "
    fi

    if [ -n "$ON_DUPLICATE_KEY" ]; then
		SQL+=" $ON_DUPLICATE_KEY"
	fi


    # ‚úÖ –í–∏–∫–æ–Ω–∞–Ω–Ω—è —ñ–º–ø–æ—Ä—Ç—É
    echo "‚öôÔ∏è –í–∏–∫–æ–Ω–∞–Ω–Ω—è —ñ–º–ø–æ—Ä—Ç—É..."
    
	if [ "$SKIP_ERRORS" = true ]; then
        mysql_cmd "$SQL" || echo "‚ö†Ô∏è –î–µ—è–∫—ñ —Ä—è–¥–∫–∏ –Ω–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–≤–∏—Ç–∏, –∞–ª–µ —ñ–º–ø–æ—Ä—Ç –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–æ."
    else
        mysql_cmd "$SQL"
    fi

    if [ $? -eq 0 ]; then
        echo "‚úÖ –Ü–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!"
    else
        echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —ñ–º–ø–æ—Ä—Ç—É."
    fi
else
    echo "‚ùå –§–æ—Ä–º–∞—Ç '$FORMAT' —â–µ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è."
    exit 4
fi
