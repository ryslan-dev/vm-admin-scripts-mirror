#!/bin/bash

set -euo pipefail
shopt -s inherit_errexit 2>/dev/null || true
IFS=$'\n\t'

GREEN='\033[92m'
YELLOW='\033[93m'
RED='\033[91m'
CYAN='\033[96m'
NC='\033[0m'

log_info()    { echo -e "${CYAN}(i) ${NC} $*" >&2; }
log_success() { echo -e "${GREEN}‚úî ${NC} $*" >&2; }
log_warn() 	  { echo -e "${YELLOW}‚ö†Ô∏è ${NC} $*" >&2; }
log_error()   { echo -e "${RED}‚úñ ${NC} $*" >&2; }

# üõë Root –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞
if [[ "$EUID" -ne 0 ]]; then
  log_error "–î–ª—è —Ä–æ–±–æ—Ç–∏ —Å–∫—Ä–∏–ø—Ç–∞ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ root"
  exit 1
fi

user=""
group=""
auto_confirm=false

# --- –ü–∞—Ä—Å–∏–º–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ ---
while [[ $# -gt 0 ]]; do
    case "$1" in
        -y|--yes)
            auto_confirm=true
            shift
            ;;
        *)
            if [[ -z "$user" ]]; then
                user="$1"
            elif [[ -z "$group" ]]; then
                group="$1"
            else
                log_error "–ù–µ–≤—ñ–¥–æ–º–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç: $1"
                exit 1
            fi
            shift
            ;;
    esac
done

if [[ -z "${user:-}" ]]; then
    log_error "–ù–µ –≤–∫–∞–∑–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"
    exit 1
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
function user_isset() {
    id "$1" &>/dev/null
}

# üõ° –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
function is_required_user() {
    [[ "$1" =~ ^(root|nobody|daemon|bin|www-data|vmail|systemd-.*)$ ]]
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —á–ª–µ–Ω—Å—Ç–≤–æ —É –≥—Ä—É–ø—ñ
function user_in_group(){
	id -nG "$1" | grep -qw "$2"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∑–∞–≥—É–ª—à–µ–Ω–∏–π –≤–∏–≤—ñ–¥ stdout
function stdout_disabled() {

    local target
    target=$(readlink /proc/$$/fd/1 2>/dev/null)

    if [[ "$target" == "/dev/null" ]]; then
        return 0
    else
        return 1
    fi
}

if ! user_isset "$user"; then
    log_error "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $user –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    exit 1
fi

if [[ -z "$group" ]] && stdout_disabled; then
	exit 2
fi

if [[ -z "$group" ]]; then
	read -p "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –≥—Ä—É–ø–∏: " group
fi

if [[ -z "$group" ]]; then
	log_error "–ü–æ—Ä–æ–∂–Ω—è –Ω–∞–∑–≤–∞ –≥—Ä—É–ø–∏"
	exit 2
fi

if ! getent group "$group" &>/dev/null; then
    log_error "–ì—Ä—É–ø—É $group –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    exit 3
fi

if user_in_group "$user" "$group"; then
    log_warn "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á $user —É–∂–µ —î —á–ª–µ–Ω–æ–º –≥—Ä—É–ø–∏ $group"
	exit 0
fi

if is_required_user "$user" && [[ "$auto_confirm" == "false" ]]; then
    read -rp "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á $user —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º, –≤–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ —â–æ —Ö–æ—á–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ –¥–æ –≥—Ä—É–ø–∏ $group? [y/N] " ans
    [[ "$ans" =~ ^[Yy]$ ]] || { echo "–î–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ –≥—Ä—É–ø–∏ —Å–∫–∞—Å–æ–≤–∞–Ω–æ"; exit 0; }
fi

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ –≥—Ä—É–ø–∏
usermod -aG "$group" "$user" && {
	log_success "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ $user –¥–æ–¥–∞–Ω–æ –¥–æ –≥—Ä—É–ø–∏ $group"
	groups=$(id -nG "$user" | sed 's/ /, /g')
	log_info "–ì—Ä—É–ø–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: $groups"
} || {
    log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ –¥–æ –≥—Ä—É–ø–∏ $group"
    exit 4
}
