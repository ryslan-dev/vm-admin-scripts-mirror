#!/bin/bash

# üíΩ –°—Ç–≤–æ—Ä—é—î –±–µ–∫–∞–ø –¥–∏—Å–∫–∞ GCP: Snapshot, Image
# –ó–±–µ—Ä—ñ–≥–∞—î –ª–æ–∫–∞–ª—å–Ω–æ + –æ–ø—Ü—ñ–π–Ω–æ –µ–∫—Å–ø–æ—Ä—Ç—É—î –≤ GCS + –∞–≤—Ç–æ–æ—á–∏—â–µ–Ω–Ω—è

set -euo pipefail
IFS=$'\n\t'

# üé® –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∫–æ–ª—å–æ—Ä–æ–≤–∏—Ö –ª–æ–≥—ñ–≤
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
RED='\033[1;31m'
NC='\033[0m'

log()    { echo -e "${GREEN}[‚úî]${NC} $*"; }
warn()   { echo -e "${YELLOW}[‚ö†Ô∏è]${NC} $*"; }
error()  { echo -e "${RED}[‚úñ]${NC} $*" >&2; exit 1; }
confirm() {
  echo -en "${YELLOW}[‚ùì]${NC} $1 [y/N]: "
  read -r REPLY
  [[ "$REPLY" =~ ^[Yy]$ ]]
}

# ====== Cleanup ======
cleanup() {
  if [[ -n "${TMP_SNAPSHOT:-}" ]]; then
    warn "üóëÔ∏è –í–∏–¥–∞–ª—è—é —Ç–∏–º—á–∞—Å–æ–≤–∏–π snapshot '$TMP_SNAPSHOT'"
    gcloud compute snapshots delete "$TMP_SNAPSHOT" \
      --project="$PROJECT" --quiet || warn "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ $TMP_SNAPSHOT"
  fi
}
trap cleanup EXIT

# ====== –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π ======
[[ -x "$(command -v gcloud)" ]] || error "‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ gcloud"
[[ -x "$(command -v jq)" ]] || error "‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ jq"

# üì¶ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
STORAGE_CLASS="ARCHIVE"         # –ö–ª–∞—Å –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è GCS
LABELS="created-by=gcp-backup-disk,date=$(date +'%Y-%m-%d')"
DATE=$(date +'%Y-%m-%d-%H-%M-%S')
SNAPSHOT=false
IMAGE=false
KEEP_LAST=0
COPY_FLAG=false
MOVE_FLAG=false

# ====== –ê—Ä–≥—É–º–µ–Ω—Ç–∏ ======
for arg in "$@"; do
  case $arg in
    --disk=*) DISK_NAME="${arg#*=}" ;;
    --zone=*) ZONE="${arg#*=}" ;;
    --project=*) PROJECT="${arg#*=}" ;;
    --snapshot) SNAPSHOT=true ;;
    --snapshot=*) SNAPSHOT_NAME="${arg#*=}"; SNAPSHOT=true ;;
    --image) IMAGE=true ;;
    --image=*) IMAGE_NAME="${arg#*=}"; IMAGE=true ;;
    --copy) COPY_FLAG=true ;;
    --move) MOVE_FLAG=true ;;
    --bucket=*) BUCKET="${arg#*=}" ;;
	--bucket-location=*) BUCKET_LOCATION="${arg#*=}" ;;
    --keep-last=*) KEEP_LAST="${arg#*=}" ;;
    --storage-class=*) STORAGE_CLASS="${arg#*=}" ;;
    --labels=*) LABELS="${arg#*=}" ;;
	--log-file=*) LOG_FILE="${arg#*=}" ;;
    *) error "‚ùå –ù–µ–≤—ñ–¥–æ–º–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $arg" ;;
  esac
done

[[ "$SNAPSHOT" == false && "$IMAGE" == false ]] && error "‚ùå –í–∫–∞–∂—ñ—Ç—å --snapshot —á–∏ --image –∞–±–æ –æ–±–∏–¥–≤–∞"
[[ -z "${DISK_NAME:-}" ]] && error "‚ùå –í–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É –¥–∏—Å–∫–∞ —á–µ—Ä–µ–∑ --disk=DISK_NAME"

[[ "$COPY_FLAG" == true && "$MOVE_FLAG" == true ]] && error "‚ùå –í–∫–∞–∂—ñ—Ç—å —â–æ—Å—å –æ–¥–Ω–µ –∑ --copy —ñ --move"

ZONE="${ZONE:-$(gcloud config get-value compute/zone 2>/dev/null)}"
PROJECT="${PROJECT:-$(gcloud config get-value project 2>/dev/null)}"

[[ -z "$ZONE" ]] && error "‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ –∑–æ–Ω—É —ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º"
[[ -z "$PROJECT" ]] && error "‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ –ø—Ä–æ–µ–∫—Ç —ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º"

if ! gcloud compute disks describe "$DISK_NAME" --zone="$ZONE" --project="$PROJECT" &>/dev/null; then
  error "‚ùå –î–∏—Å–∫ '$DISK_NAME' –Ω–µ —ñ—Å–Ω—É—î —É $ZONE"
fi

[[ "$KEEP_LAST" =~ ^[0-9]+$ ]] || error "‚ùå --keep-last –º–∞—î –±—É—Ç–∏ —Ü—ñ–ª–∏–º —á–∏—Å–ª–æ–º"

BUCKET_LOCATION="${BUCKET_LOCATION:-${ZONE%-*}}"
BUCKET="${BUCKET:-${PROJECT}-${BUCKET_LOCATION}-backups}"

if $COPY_FLAG; then
  EXPORT_MODE="copy"
elif $MOVE_FLAG; then
  EXPORT_MODE="move"
else
  EXPORT_MODE=""
fi

# üìú –õ–æ–≥-—Ñ–∞–π–ª
if [[ -n "${LOG_FILE:-}" ]]; then
  exec > >(tee -a "$LOG_FILE") 2>&1
fi

# üìå –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—è —ñ–º–µ–Ω
[[ "$SNAPSHOT" == true && -z "${SNAPSHOT_NAME:-}" ]] && \
  SNAPSHOT_NAME="${PROJECT}-${ZONE}-${DISK_NAME}-snapshot-${DATE}"
[[ "$IMAGE" == true && -z "${IMAGE_NAME:-}" ]] && \
  IMAGE_NAME="${PROJECT}-${ZONE}-${DISK_NAME}-image-${DATE}"

log "üì¶ –î–∏—Å–∫: $DISK_NAME | –ó–æ–Ω–∞: $ZONE | –ü—Ä–æ–µ–∫—Ç: $PROJECT"
$SNAPSHOT && log "üì∏ Snapshot: $SNAPSHOT_NAME"
$IMAGE && log "üñº Image: $IMAGE_NAME"
[[ -n "$EXPORT_MODE" ]] && log "‚òÅÔ∏è –ï–∫—Å–ø–æ—Ä—Ç –¥–æ GCS ($EXPORT_MODE)"
[[ "$KEEP_LAST" -ge 1 ]] && log "üßπ –ó–∞–ª–∏—à–∞—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö: $KEEP_LAST"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –¥–∏—Å–∫ —î boot
function is_boot_disk() {
  local DISK_NAME="$1"
  local ZONE="$2"

  for INSTANCE in $(gcloud compute instances list --filter="zone:($ZONE)" --format="value(name)"); do
    gcloud compute instances describe "$INSTANCE" --zone="$ZONE" --format="json" | jq -e \
      --arg disk "zones/$ZONE/disks/$DISK_NAME" \
      '.disks[] | select(.source | endswith($disk)) | select(.boot == true)' >/dev/null && {
        echo "$INSTANCE"
        return 0
      }
  done

  return 1
}

# ===== –§—É–Ω–∫—Ü—ñ—è –æ—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –±–µ–∫–∞–ø—ñ–≤ —É GCS =====
function cleanup_old_backups_gcs() {
  local BUCKET_PATH="$1"     # –ù–∞–ø—Ä–∏–∫–ª–∞–¥: gs://my-backup-bucket/backups
  local NAME_FILTER="$2"     # –ù–∞–ø—Ä–∏–∫–ª–∞–¥: interkam-europe-west1-b-data-disk-1
  local KEEP_LAST="$3"       # –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–ø—ñ–π, —è–∫—ñ —Ç—Ä–µ–±–∞ –∑–±–µ—Ä–µ–≥—Ç–∏

  if [[ -z "$BUCKET_PATH" || -z "$NAME_FILTER" || -z "$KEEP_LAST" ]]; then
    warn "‚ùå –ü–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ BUCKET_PATH, NAME_FILTER —ñ KEEP_LAST –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è GCS"
    return 1
  fi

  if [[ "$KEEP_LAST" -lt 1 ]]; then
    log "‚ÑπÔ∏è KEEP_LAST < 1 ‚Äî –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–∏–¥–∞–ª—è—î–º–æ –∑ $BUCKET_PATH"
    return 0
  fi

  log "üßπ –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –±–µ–∫–∞–ø—ñ–≤ —É $BUCKET_PATH, —Ñ—ñ–ª—å—Ç—Ä: $NAME_FILTER, –∑–∞–ª–∏—à–∞—î–º–æ $KEEP_LAST"

  gcloud storage ls --recursive "$BUCKET_PATH" \
    --format="csv[no-heading](name,time_created)" \
    | grep "$NAME_FILTER" \
    | sort -t, -k2 -r \
    | tail -n +$((KEEP_LAST + 1)) \
    | cut -d, -f1 \
    | xargs -r gcloud storage rm --quiet
}


# üì∏ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Snapshot
if [[ -n "${SNAPSHOT_NAME:-}" ]]; then

  log "üì∏ –°—Ç–≤–æ—Ä—é—é Snapshot: $SNAPSHOT_NAME"
  gcloud compute disks snapshot "$DISK_NAME" \
    --snapshot-names="$SNAPSHOT_NAME" \
    --zone="$ZONE" \
    --project="$PROJECT" \
    --labels="$LABELS" \
    || error "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ Snapshot"
  log "‚úÖ Snapshot —Å—Ç–≤–æ—Ä–µ–Ω–æ"

fi

# üñº –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Image
if [[ -n "${IMAGE_NAME:-}" ]]; then
  
  if is_boot_disk "$DISK_NAME" "$ZONE"; then
    IS_BOOT=true
  else
    IS_BOOT=false
  fi

  if [[ "$IS_BOOT" == false && "$SNAPSHOT" == false ]]; then
    log "üì∏ –î–∏—Å–∫ $DISK_NAME –Ω–µ —î boot. –°—Ç–≤–æ—Ä—é—é —Ç–∏–º—á–∞—Å–æ–≤–∏–π Snapshot..."
    TMP_SNAPSHOT="${PROJECT}-${ZONE}-${DISK_NAME}-snapshot-${DATE}"
    gcloud compute disks snapshot "$DISK_NAME" \
      --snapshot-names="$TMP_SNAPSHOT" \
      --zone="$ZONE" \
      --project="$PROJECT" \
      --labels="$LABELS" \
      || error "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤–∏–π Snapshot"
    SNAPSHOT_NAME="$TMP_SNAPSHOT"
  fi

  if [[ "$IS_BOOT" == true ]]; then
    log "üñº –°—Ç–≤–æ—Ä—é—é Image –∑ –¥–∏—Å–∫–∞: $IMAGE_NAME"
    gcloud compute images create "$IMAGE_NAME" \
      --source-disk="$DISK_NAME" \
      --source-disk-zone="$ZONE" \
      --project="$PROJECT" \
      --labels="$LABELS" \
      || error "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ Image –∑ –¥–∏—Å–∫–∞"
  else
    log "üñº –°—Ç–≤–æ—Ä—é—é Image –∑ Snapshot: $IMAGE_NAME"
    gcloud compute images create "$IMAGE_NAME" \
      --source-snapshot="$SNAPSHOT_NAME" \
      --project="$PROJECT" \
      --labels="$LABELS" \
      || error "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ Image –∑ Snapshot"
  fi

  log "‚úÖ Image —Å—Ç–≤–æ—Ä–µ–Ω–æ"
fi

# ‚òÅÔ∏è –ï–∫—Å–ø–æ—Ä—Ç –¥–æ GCS
if [[ -n "$EXPORT_MODE" ]]; then

  if ! gsutil ls -b "gs://$BUCKET" &>/dev/null; then
    log "üì¶ –°—Ç–≤–æ—Ä—é—é –Ω–æ–≤–∏–π –±–∞–∫–µ—Ç..."
    gsutil mb -p "$PROJECT" -c "$STORAGE_CLASS" -l "$BUCKET_LOCATION" "gs://$BUCKET" || error "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –±–∞–∫–µ—Ç"
  else
	BUCKET_LOC=$(gsutil ls -L -b "gs://$BUCKET" 2>/dev/null | grep -Ei '^Location constraint:' | awk -F: '{print $2}' | xargs)
    if [[ "$BUCKET_LOC" != "$BUCKET_LOCATION" ]]; then
      warn "‚ö†Ô∏è Bucket '$BUCKET' —ñ—Å–Ω—É—î, –∞–ª–µ –º–∞—î —ñ–Ω—à—É –ª–æ–∫–∞—Ü—ñ—é: $BUCKET_LOC"
    fi
  fi

  [[ "$SNAPSHOT" == true ]] && {
    log "‚òÅÔ∏è –ï–∫—Å–ø–æ—Ä—Ç Snapshot —É GCS: $SNAPSHOT_NAME"
    gcloud compute snapshots export "$SNAPSHOT_NAME" \
      --destination-uri="gs://$BUCKET/snapshots/${SNAPSHOT_NAME}.tar.gz" \
      || warn "‚ö†Ô∏è –ï–∫—Å–ø–æ—Ä—Ç Snapshot –ø—Ä–æ–ø—É—â–µ–Ω–æ"
    [[ "$EXPORT_MODE" == "move" ]] && {
      log "üóë –í–∏–¥–∞–ª—è—é Snapshot –ø—ñ—Å–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É: $SNAPSHOT_NAME"
      gcloud compute snapshots delete "$SNAPSHOT_NAME" --quiet
    }
  }
  [[ "$IMAGE" == true ]] && {
    log "‚òÅÔ∏è –ï–∫—Å–ø–æ—Ä—Ç Image —É GCS: $IMAGE_NAME"
    gcloud compute images export "$IMAGE_NAME" \
      --destination-uri="gs://$BUCKET/images/${IMAGE_NAME}.tar.gz" \
      || warn "‚ö†Ô∏è –ï–∫—Å–ø–æ—Ä—Ç Image –ø—Ä–æ–ø—É—â–µ–Ω–æ"
    [[ "$EXPORT_MODE" == "move" ]] && {
      log "üóë –í–∏–¥–∞–ª—è—é Image –ø—ñ—Å–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É: $IMAGE_NAME"
      gcloud compute images delete "$IMAGE_NAME" --quiet
    }
  }
fi

# üßπ –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö Snapshots
if [[ "$KEEP_LAST" -ge 1 && "$SNAPSHOT" == true ]]; then
  
  log "üßπ –ó–∞–ª–∏—à–∞—é –ª–∏—à–µ –æ—Å—Ç–∞–Ω–Ω—ñ $KEEP_LAST Snapshot"
  OLD_SNAPSHOTS=$(gcloud compute snapshots list \
    --filter="name~^${PROJECT}-${ZONE}-${DISK_NAME}-snapshot-" \
    --sort-by=~creationTimestamp \
    --format="value(name)" | tail -n +$((KEEP_LAST + 1)) || true)
  if [[ -n "$OLD_SNAPSHOTS" ]]; then
    log "üî¢ –ó–Ω–∞–π–¥–µ–Ω–æ $(echo "$OLD_SNAPSHOTS" | wc -l) —Å—Ç–∞—Ä–∏—Ö Snapshots –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è"
  fi
  for SNAP in $OLD_SNAPSHOTS; do
    log "üóë –í–∏–¥–∞–ª—è—é —Å—Ç–∞—Ä–∏–π Snapshot: $SNAP"
    gcloud compute snapshots delete "$SNAP" --quiet || warn "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ $SNAP"
  done
  
  if [[ -n "$EXPORT_MODE" ]]; then
    SNAPSHOTS_BACKUP_PATH="gs://$BUCKET/snapshots"
    NAME_FILTER="${PROJECT}-${ZONE}-${DISK_NAME}-snapshot"
    cleanup_old_backups_gcs "$SNAPSHOTS_BACKUP_PATH" "$NAME_FILTER" "$KEEP_LAST"
  fi
  
else
  log "üì¶ –û—á–∏—â–µ–Ω–Ω—è –¥–ª—è Snapshot –≤–∏–º–∫–Ω–µ–Ω–æ (KEEP_LAST=$KEEP_LAST)"
fi

# üßπ –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö Images
if [[ "$KEEP_LAST" -ge 1 && "$IMAGE" == true ]]; then
  
  log "üßπ –ó–∞–ª–∏—à–∞—é –ª–∏—à–µ –æ—Å—Ç–∞–Ω–Ω—ñ $KEEP_LAST Image"
  OLD_IMAGES=$(gcloud compute images list \
    --filter="name~^${PROJECT}-${ZONE}-${DISK_NAME}-image-" \
    --sort-by=~creationTimestamp \
    --format="value(name)" | tail -n +$((KEEP_LAST + 1)) || true)
  if [[ -n "$OLD_IMAGES" ]]; then
    log "üî¢ –ó–Ω–∞–π–¥–µ–Ω–æ $(echo "$OLD_IMAGES" | wc -l) —Å—Ç–∞—Ä–∏—Ö Images –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è"
  fi
  for IMG in $OLD_IMAGES; do
    log "üóë –í–∏–¥–∞–ª—è—é —Å—Ç–∞—Ä–∏–π Image: $IMG"
    gcloud compute images delete "$IMG" --quiet || warn "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ $IMG"
  done
  
  if [[ -n "$EXPORT_MODE" ]]; then
    IMAGES_BACKUP_PATH="gs://$BUCKET/images"
    NAME_FILTER="${PROJECT}-${ZONE}-${DISK_NAME}-image"
    cleanup_old_backups_gcs "$IMAGES_BACKUP_PATH" "$NAME_FILTER" "$KEEP_LAST"
  fi
  
else
  log "üì¶ –û—á–∏—â–µ–Ω–Ω—è –¥–ª—è Image –≤–∏–º–∫–Ω–µ–Ω–æ (KEEP_LAST=$KEEP_LAST)"
fi

log "‚úÖ –ë–µ–∫–∞–ø –¥–∏—Å–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!"