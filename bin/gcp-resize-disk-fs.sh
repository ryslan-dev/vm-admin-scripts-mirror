#!/bin/bash
# gcp-resize-disk-fs.sh
# –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ –Ω–∞ GCP –¥–∏—Å–∫—É
# –ü—Ä–∞—Ü—é—î –¥–ª—è –≤—Å—ñ—Ö —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤: snapshot, image, config, template

set -euo pipefail
IFS=$'\n\t'

# ===== –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –ª–æ–≥—ñ–≤ =====
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
RED='\033[1;31m'
NC='\033[0m'

log()    { echo -e "${GREEN}[‚úî]${NC} $*"; }
warn()   { echo -e "${YELLOW}[‚ö†Ô∏è]${NC} $*"; }
error()  { echo -e "${RED}[‚úñ]${NC} $*" >&2; exit 1; }
confirm() {
  echo -en "${YELLOW}[‚ùì]${NC} $1 [y/N]: "
  read -r REPLY
  [[ "$REPLY" =~ ^[Yy]$ ]]
}

# ====== –ê—Ä–≥—É–º–µ–Ω—Ç–∏ ======
AUTO=true
CREATE_TEMP_VM=false
FS_TYPE="" # ext4 –∞–±–æ xfs
FORCE=false
CHECK_ONLY=false
TEMP_ATTACHED=false
NEED_RESIZE=false

for arg in "$@"; do
  case $arg in
    --disk=*) DISK="${arg#*=}" ;;
    --zone=*) ZONE="${arg#*=}" ;;
    --project=*) PROJECT="${arg#*=}" ;;
    --vm=*) VM_NAME="${arg#*=}" ;;
    --fs=*) FS_TYPE="${arg#*=}" ;;
    --force) FORCE=true ;;
    --check-only) CHECK_ONLY=true ;;
    --log-file=*) LOG_FILE="${arg#*=}" ;;
    *) error "‚ùå –ù–µ–≤—ñ–¥–æ–º–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $arg" ;;
  esac
done

[[ -z "${DISK:-}" ]] && error "‚ùå –í–∫–∞–∂—ñ—Ç—å –¥–∏—Å–∫ —á–µ—Ä–µ–∑ --disk=DISK_NAME"

ZONE="${ZONE:-$(gcloud config get-value compute/zone 2>/dev/null)}"
PROJECT="${PROJECT:-$(gcloud config get-value project 2>/dev/null)}"

[[ -z "$ZONE" ]] && error "‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ –∑–æ–Ω—É —ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º"
[[ -z "$PROJECT" ]] && error "‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ –ø—Ä–æ–µ–∫—Ç —ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º"

if [[ -n "${LOG_FILE:-}" ]]; then
  exec > >(tee -a "$LOG_FILE") 2>&1
fi

log "üì¶ –î–∏—Å–∫: $DISK | –ó–æ–Ω–∞: $ZONE | –ü—Ä–æ–µ–∫—Ç: $PROJECT"

# ====== Cleanup ======
cleanup() {
  
  if [[ "$TEMP_ATTACHED" == "true" && -n "${TMP_VM:-}" ]]; then
    warn "üîå –í—ñ–¥–∫–ª—é—á–∞—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π '$DISK' –≤—ñ–¥ VM '$TMP_VM'"
    gcloud compute instances detach-disk "$TMP_VM" --disk="$DISK" --zone="$ZONE" --project="$PROJECT" --quiet || true
  fi

  if [[ "$TEMP_ATTACHED" == "true" && -n "${VM_NAME:-}" ]]; then
    warn "üîå –í—ñ–¥–∫–ª—é—á–∞—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π '$DISK' –≤—ñ–¥ VM '$VM_NAME'"
    gcloud compute instances detach-disk "$VM_NAME" --disk="$DISK" --zone="$ZONE" --project="$PROJECT" --quiet || true
  fi

  if [[ -n "${TMP_VM:-}" ]]; then
    warn "üóëÔ∏è –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—É VM '$TMP_VM'"
    gcloud compute instances delete "$TMP_VM" --zone="$ZONE" --project="$PROJECT" --quiet || true
  fi
  
}
trap cleanup EXIT

# ===== –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –¥–∏—Å–∫ —ñ—Å–Ω—É—î =====
gcloud compute disks describe "$DISK" --zone="$ZONE" --project="$PROJECT" >/dev/null \
  || error "‚ùå –î–∏—Å–∫ '$DISK' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É $ZONE"

# ===== –û—Ç—Ä–∏–º—É—î–º–æ —Ñ—ñ–∑–∏—á–Ω–∏–π —Ä–æ–∑–º—ñ—Ä –¥–∏—Å–∫–∞ =====
DISK_SIZE_GB=$(gcloud compute disks describe "$DISK" \
  --zone="$ZONE" --project="$PROJECT" --format="value(sizeGb)")
log "üìè –§—ñ–∑–∏—á–Ω–∏–π —Ä–æ–∑–º—ñ—Ä –¥–∏—Å–∫–∞: ${DISK_SIZE_GB}GB"

# ===== –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–æ–∑–º—ñ—Ä –§–° =====
check_fs_size() {
  local vm="$1"

  # –ó–Ω–∞—Ö–æ–¥–∏–º–æ —à–ª—è—Ö –¥–æ –ø—Ä–∏—Å—Ç—Ä–æ—é
  local device
  device=$(gcp-find-disk.sh --vm="$vm" --disk="$DISK" --zone="$ZONE" --project="$PROJECT") \
  || error "‚ùå –î–∏—Å–∫ '$DISK' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É VM '$vm' –∞–±–æ –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π"

  log "üîé –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ –Ω–∞ VM '$vm' (${device})"

  FS_SIZE_GB=$(gcloud compute ssh "$vm" --zone="$ZONE" --project="$PROJECT" --quiet \
    --command="
      if [[ ! -b ${device}1 ]]; then
        echo '0' # –î–∏—Å–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤–µ—Ä—Ç–∞—î–º–æ 0
      else
        sudo lsblk -b -o NAME,SIZE -dn ${device}1 | awk '{print int(\$2/1024/1024/1024)}'
      fi
    " || echo "0")

  if [[ "$FS_SIZE_GB" -eq 0 ]]; then
    warn "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ —Ä–æ–∑–º—ñ—Ä –§–°, –ø—Ä–∏–ø—É—Å–∫–∞—î–º–æ —â–æ –ø–æ—Ç—Ä—ñ–±–µ–Ω resize"
    return 1
  fi

  log "üìè –†–æ–∑–º—ñ—Ä —Ñ–∞–π–ª–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏: ${FS_SIZE_GB}GB"

  if (( FS_SIZE_GB == DISK_SIZE_GB )); then
    log "‚úÖ –§–∞–π–ª–æ–≤–∞ —Å–∏—Å—Ç–µ–º–∞ –≤–∂–µ –∑–∞–π–º–∞—î –≤–µ—Å—å –æ–±'—î–º –¥–∏—Å–∫–∞"
    return 0
  else
    warn "‚ö†Ô∏è –§–∞–π–ª–æ–≤–∞ —Å–∏—Å—Ç–µ–º–∞ –º–µ–Ω—à–∞ –Ω–∞ $((DISK_SIZE_GB - FS_SIZE_GB))GB"
    return 1
  fi
}


# ===== –í–∏–∑–Ω–∞—á–∞—î–º–æ VM –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ =====
if [[ -n "${VM_NAME:-}" ]]; then

  if gcp-disk-is-attached --vm="$VM_NAME" --disk="$DISK" --zone="$ZONE" --project="$PROJECT"; then
    
	log "‚úÖ –î–∏—Å–∫ '$DISK' –≤–∂–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π –¥–æ VM '$VM_NAME'"
	
  else
    
	log "üîå –¢–∏–º—á–∞—Å–æ–≤–æ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –¥–∏—Å–∫ '$DISK' –¥–æ VM '$VM_NAME'"
    
	gcloud compute instances attach-disk "$VM_NAME" --disk="$DISK" \
      --device-name=resize-disk --zone="$ZONE" --project="$PROJECT"
	
	TEMP_ATTACHED=true
  fi

  check_fs_size "$VM_NAME" || NEED_RESIZE=true

else

  TMP_VM="tmp-resize-vm-$(date +%s)"
  
  log "üñ•Ô∏è –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—É VM '$TMP_VM'"
  
  gcloud compute instances create "$TMP_VM" \
    --machine-type=e2-micro --zone="$ZONE" --project="$PROJECT" \
    --image-family=debian-11 --image-project=debian-cloud \
    --labels="temporary-resize=true,date=$(date +'%Y-%m-%d')" --quiet \
    || error "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤—É VM"
	
  log "üîå –¢–∏–º—á–∞—Å–æ–≤–æ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –¥–∏—Å–∫ '$DISK' –¥–æ —Ç–∏–º—á–∞—Å–æ–≤–æ—ó VM '$TMP_VM'"

  gcloud compute instances attach-disk "$TMP_VM" --disk="$DISK" \
    --device-name=resize-disk --zone="$ZONE" --project="$PROJECT"
	
  TEMP_ATTACHED=true

  check_fs_size "$TMP_VM" || NEED_RESIZE=true
fi

if $CHECK_ONLY; then
  log "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
  if [[ "$NEED_RESIZE" == "true" ]]; then
    log "‚úÖ –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–µ"
  else
    log "‚úÖ –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ"
  fi
  exit 0
fi

if [[ "$NEED_RESIZE" != "true" && "$FORCE" != "true" ]]; then
  log "‚úÖ –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ"
  exit 0
fi

# ===== –†–æ–∑—à–∏—Ä—é—î–º–æ –§–° =====
resize_in_vm() {
  local vm="$1"

  # –ó–Ω–∞—Ö–æ–¥–∏–º–æ —à–ª—è—Ö –¥–æ –ø—Ä–∏—Å—Ç—Ä–æ—é
  local device
  device=$(gcp-find-disk.sh --vm="$vm" --disk="$DISK" --zone="$ZONE" --project="$PROJECT") \
  || error "‚ùå –î–∏—Å–∫ '$DISK' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É VM '$vm' –∞–±–æ –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π"

  log "üìà –í–∏–∫–æ–Ω—É—î–º–æ growpart —ñ resize –Ω–∞ VM '$vm' (${device})"

  gcloud compute ssh "$vm" --zone="$ZONE" --project="$PROJECT" --quiet --tunnel-through-iap \
    --command="
      if [[ ! -b ${device}1 ]]; then
        echo '‚ùå –ë–ª–æ—á–Ω–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π ${device}1 –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'; exit 1
      fi
      sudo apt-get update -y && sudo apt-get install -y cloud-guest-utils gdisk xfsprogs || true
      sudo growpart ${device} 1
      FS_TYPE=\$(sudo blkid -o value -s TYPE ${device}1 || echo ext4)
      case \"\$FS_TYPE\" in
        ext4) sudo resize2fs ${device}1 ;;
        xfs) sudo xfs_growfs ${device}1 ;;
        *) echo '‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∞ –§–°, —Å–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É'; exit 1 ;;
      esac
    " || error "‚ùå –ü–æ–º–∏–ª–∫–∞ resize —É VM '$vm'"
}

resize_in_vm "${VM_NAME:-$TMP_VM}"

log "üéâ –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ"
