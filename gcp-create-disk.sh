#!/bin/bash

# üíΩ –°—Ç–≤–æ—Ä—é—î –¥–∏—Å–∫ GCP –∑ snapshot, image, –∞—Ä—Ö—ñ–≤—É –∞–±–æ gs:// —Ç–∞ —Ä–æ–∑—à–∏—Ä—é—î —Ñ–∞–π–ª–æ–≤—É —Å–∏—Å—Ç–µ–º—É (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)

set -euo pipefail
IFS=$'\n\t'

# üé® –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∫–æ–ª—å–æ—Ä–æ–≤–∏—Ö –ª–æ–≥—ñ–≤
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
RED='\033[1;31m'
NC='\033[0m'

log()    { echo -e "${GREEN}[‚úî]${NC} $*"; }
warn()   { echo -e "${YELLOW}[‚ö†Ô∏è]${NC} $*"; }
error()  { echo -e "${RED}[‚úñ]${NC} $*" >&2; exit 1; }
confirm() {
  echo -en "${YELLOW}[‚ùì]${NC} $1 [y/N]: "
  read -r REPLY
  [[ "$REPLY" =~ ^[Yy]$ ]]
}

SKIP_FS_RESIZE=false

# ====== –ê—Ä–≥—É–º–µ–Ω—Ç–∏ ======
for arg in "$@"; do
  case $arg in
    --source=*) SOURCE_NAME="${arg#*=}" ;;
    --disk=*) NEW_DISK_NAME="${arg#*=}" ;;
    --type=*) DISK_TYPE="${arg#*=}" ;;
    --size=*) DISK_SIZE="${arg#*=}" ;;
    --zone=*) ZONE="${arg#*=}" ;;
    --project=*) PROJECT="${arg#*=}" ;;
	--skip-fs-resize) SKIP_FS_RESIZE=true ;;
    --log-file=*) LOG_FILE="${arg#*=}" ;;
    *) error "‚ùå –ù–µ–≤—ñ–¥–æ–º–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $arg" ;;
  esac
done

[[ -z "${SOURCE_NAME:-}" ]] && error "‚ùå –í–∫–∞–∂—ñ—Ç—å –¥–∂–µ—Ä–µ–ª–æ —á–µ—Ä–µ–∑ --source=SNAPSHOT|IMAGE|ARCHIVE|gs://FILE"
[[ -z "${NEW_DISK_NAME:-}" ]] && error "‚ùå –í–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É –¥–∏—Å–∫–∞ —á–µ—Ä–µ–∑ --disk=DISK_NAME"

ZONE="${ZONE:-$(gcloud config get-value compute/zone 2>/dev/null)}"
PROJECT="${PROJECT:-$(gcloud config get-value project 2>/dev/null)}"

[[ -z "$ZONE" ]] && error "‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ –∑–æ–Ω—É —ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º"
[[ -z "$PROJECT" ]] && error "‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ –ø—Ä–æ–µ–∫—Ç —ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º"

# üìú –õ–æ–≥-—Ñ–∞–π–ª
if [[ -n "${LOG_FILE:-}" ]]; then
  exec > >(tee -a "$LOG_FILE") 2>&1
fi

log "üì¶ –î–∂–µ—Ä–µ–ª–æ: $SOURCE_NAME | –î–∏—Å–∫: $NEW_DISK_NAME | –ó–æ–Ω–∞: $ZONE | –ü—Ä–æ–µ–∫—Ç: $PROJECT"

# ====== Cleanup ======
cleanup() {
  if [[ -n "${TEMP_IMAGE:-}" ]]; then
    warn "üóëÔ∏è –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π –æ–±—Ä–∞–∑ '$TEMP_IMAGE'"
    gcloud compute images delete "$TEMP_IMAGE" --project="$PROJECT" --quiet || true
  fi
  if [[ -n "${TEMP_BUCKET:-}" ]]; then
    if [[ -n "${GCS_FILE:-}" && "$GCS_FILE" == gs://$TEMP_BUCKET/* ]]; then
      warn "üóëÔ∏è –í–∏–¥–∞–ª—è—î–º–æ —Ñ–∞–π–ª '$GCS_FILE' –∑ –±–∞–∫–µ—Ç—É"
      gsutil rm "$GCS_FILE" || true
    fi
    warn "üóëÔ∏è –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π –±–∞–∫–µ—Ç '$TEMP_BUCKET'"
    gsutil rm -r "gs://$TEMP_BUCKET" || true
  fi
}
trap cleanup EXIT

# ===== –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –¥–∏—Å–∫ –≤–∂–µ —ñ—Å–Ω—É—î =====
if gcloud compute disks list --filter="name=($NEW_DISK_NAME)" --format="value(name)" | grep -q "$NEW_DISK_NAME"; then
  warn "–î–∏—Å–∫ '$NEW_DISK_NAME' –≤–∂–µ —ñ—Å–Ω—É—î –≤ $ZONE"
  if confirm "–í–∏–¥–∞–ª–∏—Ç–∏ —ñ—Å–Ω—É—é—á–∏–π –¥–∏—Å–∫ '$NEW_DISK_NAME' —ñ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π?"; then
    gcloud compute disks delete "$NEW_DISK_NAME" --zone="$ZONE" --project="$PROJECT" --quiet \
      || error "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ —ñ—Å–Ω—É—é—á–∏–π –¥–∏—Å–∫"
    log "üóëÔ∏è –°—Ç–∞—Ä–∏–π –¥–∏—Å–∫ '$NEW_DISK_NAME' –≤–∏–¥–∞–ª–µ–Ω–æ"
  else
    error "‚èπÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –¥–∏—Å–∫–∞ –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º"
  fi
fi

# ===== –ù–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–∂–µ—Ä–µ–ª–∞ =====
SOURCE_TYPE=""
TEMP_IMAGE=""
TEMP_BUCKET=""
NORMALIZED_SOURCE=""

if timeout 20 gcloud compute images describe "$SOURCE_NAME" --project="$PROJECT" &>/dev/null; then
  SOURCE_TYPE="gcp-image"
elif timeout 20 gcloud compute snapshots describe "$SOURCE_NAME" --project="$PROJECT" &>/dev/null; then
  SOURCE_TYPE="gcp-snapshot"
elif [[ "$SOURCE_NAME" == *.tar.gz && -f "$SOURCE_NAME" ]]; then
  SOURCE_TYPE="archive"
elif [[ "$SOURCE_NAME" == gs://* ]]; then
  SOURCE_TYPE="gcs-file"
fi

if [[ "$SOURCE_TYPE" == "gcp-snapshot" ]]; then
  log "üì∏ –î–∂–µ—Ä–µ–ª–æ–º —î GCP snapshot"
  NORMALIZED_SOURCE="--source-snapshot=$SOURCE_NAME"

elif [[ "$SOURCE_TYPE" == "gcp-image" ]]; then
  log "üì∏ –î–∂–µ—Ä–µ–ª–æ–º —î GCP image"
  NORMALIZED_SOURCE="--image=$SOURCE_NAME"

elif [[ "$SOURCE_TYPE" == "archive" || "$SOURCE_TYPE" == "gcs-file" ]]; then
  TEMP_IMAGE="tmp-imported-image-$(date +%Y-%m-%d)-$RANDOM"
  if [[ "$SOURCE_TYPE" == "archive" ]]; then
    log "üóúÔ∏è –î–∂–µ—Ä–µ–ª–æ–º —î –∞—Ä—Ö—ñ–≤ (.tar.gz)"
    TEMP_BUCKET="tmp-import-bucket-$(date +%Y-%m-%d)-$RANDOM"
    log "ü™£ –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π –±–∞–∫–µ—Ç: $TEMP_BUCKET"
    gsutil mb -p "$PROJECT" "gs://$TEMP_BUCKET/"
    log "‚òÅÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ $SOURCE_NAME —É gs://$TEMP_BUCKET/"
    gsutil cp "$SOURCE_NAME" "gs://$TEMP_BUCKET/"
    GCS_FILE="gs://$TEMP_BUCKET/$(basename "$SOURCE_NAME")"
  else
    log "‚òÅÔ∏è –î–∂–µ—Ä–µ–ª–æ–º —î —Ñ–∞–π–ª —É Cloud Storage"
    GCS_FILE="$SOURCE_NAME"
  fi
  log "üì• –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –æ–±—Ä–∞–∑ '$TEMP_IMAGE' –∑ $GCS_FILE"
  gcloud compute images import "$TEMP_IMAGE" \
    --source-file="$GCS_FILE" \
    --project="$PROJECT" \
    || error "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –æ–±—Ä–∞–∑"
  NORMALIZED_SOURCE="--image=$TEMP_IMAGE"
else
  error "‚ùå –ù–µ–≤—ñ–¥–æ–º–µ –¥–∂–µ—Ä–µ–ª–æ '$SOURCE_NAME'. –ü—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è snapshot, image, –∞—Ä—Ö—ñ–≤ .tar.gz –∞–±–æ gs://file"
fi

DISK_TYPE="${DISK_TYPE:-pd-ssd}"
DISK_SIZE="${DISK_SIZE:-10GB}"

# ===== –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Å–∫–∞ =====
log "üíΩ –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Å–∫ '$NEW_DISK_NAME'"
gcloud compute disks create "$NEW_DISK_NAME" \
  $NORMALIZED_SOURCE \
  --zone="$ZONE" \
  --project="$PROJECT" \
  --type="$DISK_TYPE" \
  --size="$DISK_SIZE" \
  --labels="restored-from=$SOURCE_TYPE,date=$(date +'%Y-%m-%d')" \
  || error "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –¥–∏—Å–∫"

log "‚úÖ –î–∏—Å–∫ '$NEW_DISK_NAME' —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ"

# üìê –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∞ —Ä–æ–∑—à–∏—Ä—é—î–º–æ –§–° (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
if [[ "$SKIP_FS_RESIZE" == false ]]; then
  log "üìà –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∞ —Ä–æ–∑—à–∏—Ä—é—î–º–æ —Ñ–∞–π–ª–æ–≤—É —Å–∏—Å—Ç–µ–º—É (–∑–∞ –ø–æ—Ç—Ä–µ–±–∏)"
  gcp-resize-disk-fs \
    --disk="$NEW_DISK_NAME" \
    --zone="$ZONE" \
    --project="$PROJECT" \
    || error "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ/—Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—ñ —Ñ–∞–π–ª–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏"
fi