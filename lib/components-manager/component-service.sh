declare -gA service_labels=(
  [get_components]='–û—Ç—Ä–∏–º—É—î–º–æ —Å–µ—Ä–≤—ñ—Å–∏'
  [no_components_found]='–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Å–µ—Ä–≤—ñ—Å–∏'
  [no_components_found_with_filter]='–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Å–µ—Ä–≤—ñ—Å–∏ –∑ —Ñ—ñ–ª—å—Ç—Ä–æ–º: $(IFS=, ; echo "${FILTER[*]}")'
  [available_component]='–î–æ—Å—Ç—É–ø–Ω–∏–π —Å–µ—Ä–≤—ñ—Å'
  [available_components]='–î–æ—Å—Ç—É–ø–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏'
  [no_components_selected]='–°–µ—Ä–≤—ñ—Å–∏ –Ω–µ –≤–∏–±—Ä–∞–Ω—ñ'
  [selected_component]='–û–±—Ä–∞–Ω–∏–π —Å–µ—Ä–≤—ñ—Å'
  [selected_components]='–û–±—Ä–∞–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏'
  [component_processing]='–û–±—Ä–æ–±–∫–∞ —Å–µ—Ä–≤—ñ—Å—É'
  [components_processing]='–û–±—Ä–æ–±–∫–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤'
  [q_continue_working_with_selected_component]='–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –æ–±—Ä–∞–Ω–∏–º —Å–µ—Ä–≤—ñ—Å–æ–º?'
  [q_continue_working_with_selected_components]='–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –æ–±—Ä–∞–Ω–∏–º–∏ —Å–µ—Ä–≤—ñ—Å–∞–º–∏?'
)

# ===================== FUNCTIONS =====================

# üîç –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç —Å–µ—Ä–≤—ñ—Å—É
function get_service_priority() {
  local service="$1"
  local priority
  
  priority="${SERVICE_PRIORITY[$service]:-unknown}"

  echo "$priority"
}

function get_service_description() {
  local service="$1"
  local description
  
  description="${SERVICE_DESCRIPTIONS[$service]:-}"
  
  echo "$description"
}

function print_services() {
  local -n arr=$1
  
  local basename priority description
  
  local index=1
  for service in "${arr[@]}"; do
    
	basename="${service%.service}"
	priority="$(get_service_priority "$service")"
	description="$(get_service_description "$service")"
    
	printf "%-4s %-40s | %-9s | %s\n" "$index" "$basename" "$priority" "$description"
	((index++))
  done
}

function get_service_components() {
  local -n filters="$1"
  local -n _out=$2
  _out=()
  
  local SERVICES=()
  local priority
  local priorities=()
  
  for f in "${filters[@]}"; do
    if in_array "$f" COMPONENT_PRIORITIES; then
		priorities+=("$f")
	fi
  done
  
  # üîé –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤
  if in_array "active" filters; then
    if [[ -z "$SEARCH" ]]; then
	  readarray -t SERVICES < <(systemctl list-units --type=service --state=running --no-pager --no-legend | awk '{print $1}')
	else
      readarray -t SERVICES < <(systemctl list-units --type=service --state=running --no-pager --no-legend | awk '{print $1}' | grep -i -- "$SEARCH")
	fi
  else
    if [[ -z "$SEARCH" ]]; then
	  readarray -t SERVICES < <(systemctl list-unit-files --type=service --no-pager --no-legend | awk '{print $1}')
	else
      readarray -t SERVICES < <(systemctl list-unit-files --type=service --no-pager --no-legend | awk '{print $1}' | grep -i -- "$SEARCH")
	fi
  fi
  
  # –Ø–∫—â–æ –Ω–µ–º–∞—î —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—ñ–≤ ‚Äî –ø—Ä–æ—Å—Ç–æ –≤—ñ–¥–¥–∞—î–º–æ –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –±–µ–∑ —Ü–∏–∫–ª—ñ–≤
  if is_array_empty priorities; then
    _out=("${SERVICES[@]}")
    return 0
  fi
  
  # –Ü–Ω–∞–∫—à–µ ‚Äî —Ñ—ñ–ª—å—Ç—Ä—É—î–º–æ –∑–∞ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–æ–º
  for service in "${SERVICES[@]}"; do
    
	priority="$(get_service_priority "$service")"
    
    if in_array "$priority" priorities; then
        _out+=("$service")
    fi
  done
}

function action_service_components() {
  local -n actions="$1"
  local -n services="$2"
  local label service value
  
  local priority
  
  local -A action_names=(
    [status]="–í–∏–≤—ñ–¥ —Å—Ç–∞–Ω—É —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[is_active]="–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[start]="–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[stop]="–ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[restart]="–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[reload]="–ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[is_enabled]="–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É–≤—ñ–º–∫–Ω–µ–Ω–Ω—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[enable]="–£–≤—ñ–º–∫–Ω–µ–Ω–Ω—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[disable]="–í–∏–º–∫–Ω–µ–Ω–Ω—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[mask]="–ë–ª–æ–∫—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[unmask]="–†–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[edit]="–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —é–Ω—ñ—Ç-—Ñ–∞–π–ª—É —Å–µ—Ä–≤—ñ—Å—ñ–≤"
    [cat]="–í–∏–≤—ñ–¥ —é–Ω—ñ—Ç-—Ñ–∞–π–ª—É —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[show]="–í–∏–≤—ñ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ —é–Ω—ñ—Ç–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[list_dependencies]="–í–∏–≤—ñ–¥ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[list_unit_files]="–°–ø–∏—Å–æ–∫ —é–Ω—ñ—Ç-—Ñ–∞–π–ª—ñ–≤ —Ç–∞ —ó—Ö —Å—Ç–∞–Ω"
	[help]="–î–æ–≤—ñ–¥–∫–∞"
	[priority]="–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	[short_description]="–í–∏–≤—ñ–¥ –∫–æ—Ä–æ—Ç–∫–∏—Ö –æ–ø–∏—Å—ñ–≤ —Å–µ—Ä–≤—ñ—Å—ñ–≤"
  )
  
  action_service_components__get_label() {
    local key="$1"
    local text="${action_names[$key]:-$key}"
    
	text="${text//\{service\}/${service:-}}"
    echo "$text"
  }
  
  is_array_empty services && log_warn "–°–µ—Ä–≤—ñ—Å–∏ –Ω–µ –≤–∫–∞–∑–∞–Ω—ñ" && return 2
  is_array_empty actions && log_warn "–î—ñ—ó –Ω–µ –≤–∫–∞–∑–∞–Ω—ñ" && return 2
  
  for action in "${actions[@]}"; do
	
	service="${services[0]:-}"
	if is_array_single services && array_key_has_value "${action}_single" action_names; then
		label=$(action_service_components__get_label "${action}_single")
	elif array_key_has_value "$action" action_names; then
        label=$(action_service_components__get_label "$action")
    else
        label="$action"
    fi

    echo -e "${YELLOW_BOLD}$label${NC}\n"
	
	case "$action" in
      status)
		local index=1
	    for service in "${services[@]}"; do
		  echo -e "${BOLD}$index –°–µ—Ä–≤—ñ—Å $service:${NC}"
		  systemctl status "$service" --no-pager || log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å $service"
		  ((index++))
		done
        ;;
	  start)
        local index=1
	    for service in "${services[@]}"; do
		  systemctl start "$service" && status="$(get_log_success "$service –∑–∞–ø—É—â–µ–Ω–æ")" || status="$(get_log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ $service")"
		  printf "%-4s %-40s %s\n" "$index" "$service" "$status"
		  ((index++))
		done
        ;;
      stop)
        local index=1
	    for service in "${services[@]}"; do
		  
		  priority="$(get_service_priority "$service")"
		  
		  if is_required "$service" "$priority"; then
			status="$(get_log_warn "$service –Ω–µ –∑—É–ø–∏–Ω–µ–Ω–æ, –±–æ —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º –¥–ª—è —Ä–æ–±–æ—Ç–∏ —Å–∏—Å—Ç–µ–º–∏")"
		  else
		    systemctl stop "$service" && status="$(get_log_success "$service –∑—É–ø–∏–Ω–µ–Ω–æ")" || status="$(get_log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑—É–ø–∏–Ω–∏—Ç–∏ $service")"
		  fi
		  
		  printf "%-4s %-40s %s\n" "$index" "$service" "$status"
		  
		  ((index++))
		done
        ;;
	  restart)
	    local index=1
	    for service in "${services[@]}"; do
		  
		  systemctl restart "$service" && status="$(get_log_success "$service –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ")" || status="$(get_log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ $service")"
		  
		  printf "%-4s %-40s %s\n" "$index" "$service" "$status"
		  
		  ((index++))
		done
        ;;
	  reload)
	    local index=1
	    for service in "${services[@]}"; do
		  
		  systemctl reload "$service" && status="$(get_log_success "$service –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ")" || status="$(get_log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ $service")"
		  
		  printf "%-4s %-40s %s\n" "$index" "$service" "$status"
		  
		  ((index++))
		done
        ;;
	  is_active)
		local index=1
	    for service in "${services[@]}"; do
		  status="$(systemctl is-active "$service" 2>/dev/null)" || status="$(get_log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å $service")"
		  printf "%-4s %-40s %s\n" "$index" "$service" "$status"
		  ((index++))
		done
        ;;
	  is_enabled)
		local index=1
	    for service in "${services[@]}"; do
		  status="$(systemctl is-enabled "$service" 2>/dev/null)" || status="$(get_log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —É–≤—ñ–º–∫–Ω–µ–Ω–Ω—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫—É $service")"
		  printf "%-4s %-40s %s\n" "$index" "$service" "$status"
		  ((index++))
		done
        ;;
	  enable)
	    local index=1
	    for service in "${services[@]}"; do
		  
		  systemctl enable "$service" && status="$(get_log_success "–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ $service —É–≤—ñ–º–∫–Ω–µ–Ω–æ")" || status="$(get_log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è —É–≤—ñ–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ $service")"
		  
		  printf "%-4s %-40s %s\n" "$index" "$service" "$status"
		  
		  ((index++))
		done
	    ;;
      disable)
	    local index=1
	    for service in "${services[@]}"; do
		  
		  priority="$(get_service_priority "$service")"
		  
		  if is_required "$service" "$priority"; then
			status="$(get_log_warn "–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ $service –Ω–µ –≤–∏–º–∫–Ω–µ–Ω–æ, –±–æ —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º –¥–ª—è —Ä–æ–±–æ—Ç–∏ —Å–∏—Å—Ç–µ–º–∏")"
		  else
		    systemctl disable "$service" && status="$(get_log_success "–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ $service –≤–∏–º–∫–Ω–µ–Ω–æ")" || status="$(get_log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ $service")"
		  fi
		  
		  printf "%-4s %-40s %s\n" "$index" "$service" "$status"
		  
		  ((index++))
		done		
	    ;;
	  mask)
	    local index=1
	    for service in "${services[@]}"; do
		  
		  priority="$(get_service_priority "$service")"
		  
		  if is_required "$service" "$priority"; then
			status="$(get_log_warn "–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ $service –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ, –±–æ —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º –¥–ª—è —Ä–æ–±–æ—Ç–∏ —Å–∏—Å—Ç–µ–º–∏")"
		  else
		    systemctl mask "$service" && status="$(get_log_success "$service –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ")" || status="$(get_log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ $service")"
		  fi
		  
		  printf "%-4s %-40s %s\n" "$index" "$service" "$status"
		  
		  ((index++))
		done
	    ;;
      unmask)
	    local index=1
	    for service in "${services[@]}"; do
		  
		  systemctl unmask "$service" && status="$(get_log_success "$service —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–æ")" || status="$(get_log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏ $service")"
		  
		  printf "%-4s %-40s %s\n" "$index" "$service" "$status"
		  
		  ((index++))
		done
        ;;
	  edit)
	    local index=1
	    for service in "${services[@]}"; do
		  echo -e "${BOLD}$index –°–µ—Ä–≤—ñ—Å $service:${NC}"
		  systemctl edit "$service" || log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ $service"
		  ((index++))
		done
        ;;
	  cat)
	    local index=1
	    for service in "${services[@]}"; do
		  echo -e "${BOLD}$index –°–µ—Ä–≤—ñ—Å $service:${NC}"
		  systemctl cat "$service" || log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ–∫–∞–∑–∞—Ç–∏ —é–Ω—ñ—Ç-—Ñ–∞–π–ª—É $service"
		  ((index++))
		done
        ;;
	  show)
	    local index=1
	    for service in "${services[@]}"; do
		  echo -e "\n${BOLD}$index –°–µ—Ä–≤—ñ—Å $service:${NC}"
		  systemctl show "$service" || log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —é–Ω—ñ—Ç–∞ $service"
		  ((index++))
		done
        ;;
	  list_dependencies)
	    local index=1
	    for service in "${services[@]}"; do
		  echo -e "${BOLD}$index –°–µ—Ä–≤—ñ—Å $service:${NC}"
		  systemctl list-dependencies "$service" || log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ–∫–∞–∑–∞—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ $service"
		  ((index++))
		done
        ;;
	  list_unit_files)
	    local index=1
	    for service in "${services[@]}"; do
		  echo -e "${BOLD}$index –°–µ—Ä–≤—ñ—Å $service:${NC}"
		  systemctl list-unit-files "$service" || log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —é–Ω—ñ—Ç-—Ñ–∞–π–ª—ñ–≤ $service"
		  ((index++))
		done
        ;;
	  help)
	    local index=1
	    for service in "${services[@]}"; do
		  echo -e "${BOLD}$index –°–µ—Ä–≤—ñ—Å $service:${NC}"
		  systemctl help "$service" || log_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É $service"
		  ((index++))
		done
        ;;
	  priority)
	    local index=1
	    for service in "${services[@]}"; do
		  
		  priority="$(get_service_priority "$service")"
		  
		  printf "%-4s %-40s %s\n" "$index" "$service" "$priority"
		  
		  ((index++))
		done
	    ;;
	  short_description)
	    local index=1
	    for service in "${services[@]}"; do
		  
		  description="$(get_service_description "$service")"
		  
		  printf "%-4s %-40s - %s\n" "$index" "$service" "$description"
		  
		  ((index++))
		done
	    ;;
      *)
        echo "${RED}‚úñ –ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è: $action${NC}"
        ;;
	esac
  
  done
}

function show_service_filter_menu() {
	menu_header "${HEADER_LABELS[$TYPE]:-$TYPE}"
    echo "–£—Å—ñ"
    echo "1) –ê–∫—Ç–∏–≤–Ω—ñ"
    echo "2) –û–±–æ–≤'—è–∑–∫–æ–≤—ñ"
    echo "3) –û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ"
    echo "4) –î–æ–¥–∞–¥–∫–æ–≤—ñ"
	echo "s) –®—É–∫–∞—Ç–∏ –∑–∞ –Ω–∞–∑–≤–æ—é"
    menu_nav
}

function parse_service_filter_choices() {
    local choice
    for choice in "${choices[@]}"; do
        case "$choice" in
            "") FILTER+=("all") ;;
            1) FILTER+=("active") ;;
            2) FILTER+=("required") ;;
            3) FILTER+=("optional") ;;
            4) FILTER+=("extra") ;;
            s) FILTER+=("search") ;;
            c) return 1 ;;
            x) exit 0 ;;
            *) log_error "–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –≤–∏–±—ñ—Ä"; return 2 ;;
        esac
    done
}

function show_service_action_menu() {
	menu_header "üõ†Ô∏è  –ö–µ—Ä—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å–∞–º–∏"
	echo "1) –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞–Ω (status)"
	echo "2) –ó–∞–ø—É—Å—Ç–∏—Ç–∏ (start)"
	echo "3) –ó—É–ø–∏–Ω–∏—Ç–∏ (stop)"
	echo "4) –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ (restart)"
	echo "5) –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é (reload)"
    echo "6) –ë–ª–æ–∫—É–≤–∞—Ç–∏ (mask)"
	echo "7) –†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏ (unmask)"
	menu_header "üöÄ  –ö–µ—Ä—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	echo "11) –£–≤—ñ–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (enable)"
	echo "12) –í–∏–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (disable)"
	menu_header "üìù  –†–æ–±–æ—Ç–∞ –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è–º–∏ —Å–µ—Ä–≤—ñ—Å—ñ–≤"
	echo "21) –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ override-–∫–æ–Ω—Ñ—ñ–≥ (edit)"
	echo "22) –ü–æ–∫–∞–∑–∞—Ç–∏ —é–Ω—ñ—Ç-—Ñ–∞–π–ª (cat)"
	menu_header "üìä  –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —Ç–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"
	echo "31) –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å (is-active)"
	echo "32) –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (is-enabled)"
	echo "33) –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç"
	echo "34) –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å"
	echo "35) –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —é–Ω—ñ—Ç–∞ (show)"
	echo "36) –ü–æ–∫–∞–∑–∞—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ (list-dependencies)"
	echo "37) –°–ø–∏—Å–æ–∫ —é–Ω—ñ—Ç-—Ñ–∞–π–ª—ñ–≤ —Ç–∞ —ó—Ö —Å—Ç–∞–Ω (list-unit-files)"
	echo "h) –î–æ–≤—ñ–¥–∫–∞ (help)"
	menu_nav
}

function parse_service_action_choices() {
    local choice
	
	if [[ ${#choices[@]} -eq 0 ]]; then
		log_error "–ù—ñ—á–æ–≥–æ –Ω–µ –≤–∏–±—Ä–∞–Ω–æ"
		return 2
	fi
	
    for choice in "${choices[@]}"; do
        case "$choice" in
            1) ACTION+=("status") ;;
			2) ACTION+=("start") ;;
			3) ACTION+=("stop") ;;
            4) ACTION+=("restart") ;;
			5) ACTION+=("reload") ;;
			6) ACTION+=("mask") ;;
			7) ACTION+=("unmask") ;;
            12) ACTION+=("enable") ;;
            13) ACTION+=("disable") ;;
			21) ACTION+=("edit") ;;
			22) ACTION+=("cat") ;;
			31) ACTION+=("is_active") ;;
			32) ACTION+=("is_enabled") ;;
			33) ACTION+=("priority") ;;
			34) ACTION+=("short_description") ;;
			35) ACTION+=("show") ;;
			36) ACTION+=("list_dependencies") ;;
			37) ACTION+=("list_unit_files") ;;
			h) ACTION+=("help") ;;
            c) return 1 ;;
            x) exit 0 ;;
            *) log_error "–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –≤–∏–±—ñ—Ä"; return 2 ;;
        esac
    done
}

function service_filter_menu_items(){
	
	local -n Items="$1"
	local -n Labels="$2"
	
	Labels=(
		[c]="–°–∫–∞—Å—É–≤–∞—Ç–∏"
		[x]="–í–∏–π—Ç–∏"
		[cancel]="${HEADER_LABELS[cancel]:-}"
		[exit]="${HEADER_LABELS[exit]:-}"
		[all]="–£—Å—ñ"
		[active]="–ê–∫—Ç–∏–≤–Ω—ñ"
		[required]="–û–±–æ–≤'—è–∑–∫–æ–≤—ñ"
		[optional]="–û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ"
		[extra]="–î–æ–¥–∞–¥–∫–æ–≤—ñ"
		[search]="–®—É–∫–∞—Ç–∏ –∑–∞ –Ω–∞–∑–≤–æ—é"
	)
	
	Items=(
		all
		active
		required
		optional
		extra
		search
	)
}

function service_action_menu_items(){
	
	local -n Items="$1"
	local -n Labels="$2"
	
	Labels=(
		[c]="–°–∫–∞—Å—É–≤–∞—Ç–∏"
		[x]="–í–∏–π—Ç–∏"
		[cancel]="${HEADER_LABELS[cancel]:-}"
		[exit]="${HEADER_LABELS[exit]:-}"
		[status]="–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞–Ω (status)"
		[start]="–ó–∞–ø—É—Å—Ç–∏—Ç–∏ (start)"
		[stop]="–ó—É–ø–∏–Ω–∏—Ç–∏ (stop)"
		[restart]="–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ (restart)"
		[reload]="–ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é (reload)"
		[mask]="–ë–ª–æ–∫—É–≤–∞—Ç–∏ (mask)"
		[unmask]="–†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏ (unmask)"
		[enable]="–£–≤—ñ–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (enable)"
		[disable]="–í–∏–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (disable)"
		[edit]="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ override-–∫–æ–Ω—Ñ—ñ–≥ (edit)"
		[cat]="–ü–æ–∫–∞–∑–∞—Ç–∏ —é–Ω—ñ—Ç-—Ñ–∞–π–ª (cat)"
		[is_active]="–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å (is-active)"
		[is_enabled]="–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (is-enabled)"
		[priority]="–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç"
		[short_description]="–ü–æ–∫–∞–∑–∞—Ç–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å"
		[show]="–ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —é–Ω—ñ—Ç–∞ (show)"
		[list_dependencies]="–ü–æ–∫–∞–∑–∞—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ (list-dependencies)"
		[list_unit_files]="–°–ø–∏—Å–æ–∫ —é–Ω—ñ—Ç-—Ñ–∞–π–ª—ñ–≤ —Ç–∞ —ó—Ö —Å—Ç–∞–Ω (list-unit-files)"
		[help]="–î–æ–≤—ñ–¥–∫–∞ (help)"
	)
	
	Items=(
        status
		start
		stop
        restart
		reload
		mask
		unmask
        enable
        disable
		edit
		cat
		is_active
		is_enabled
		priority
		short_description
		show
		list_dependencies
		list_unit_files
		help
	)
}
